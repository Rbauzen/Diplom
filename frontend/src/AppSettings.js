// frontend/src/AppSettings.js
import React, { useState, useEffect } from 'react';
import { usePharmacy } from './contexts/PharmacyContext';
import './AppSettings.css';

const EXPIRY_THRESHOLD_KEY = 'settings_expiryThresholdDays';
const LOW_QUANTITY_THRESHOLD_KEY = 'settings_lowQuantityDefaultThreshold';

function AppSettings({ allMedicines }) {
    const { pharmacyId, createNewPharmacy, joinPharmacy, clearPharmacyId } = usePharmacy();
    const [inputPharmacyIdToJoin, setInputPharmacyIdToJoin] = useState('');

    const [expiryThresholdDays, setExpiryThresholdDays] = useState(() => {
        return parseInt(localStorage.getItem(EXPIRY_THRESHOLD_KEY) || '14', 10);
    });
    const [lowQuantityDefaultThreshold, setLowQuantityDefaultThreshold] = useState(() => {
        return parseInt(localStorage.getItem(LOW_QUANTITY_THRESHOLD_KEY) || '5', 10);
    });

    const [expiringSoon, setExpiringSoon] = useState([]);
    const [lowStock, setLowStock] = useState([]);

    useEffect(() => {
        localStorage.setItem(EXPIRY_THRESHOLD_KEY, expiryThresholdDays.toString());
    }, [expiryThresholdDays]);

    useEffect(() => {
        localStorage.setItem(LOW_QUANTITY_THRESHOLD_KEY, lowQuantityDefaultThreshold.toString());
    }, [lowQuantityDefaultThreshold]);

    useEffect(() => {
            if (!allMedicines || allMedicines.length === 0) {
                setExpiringSoon([]);
                setLowStock([]);
                return;
            }
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            const expiring = allMedicines.filter(med => {
                if (!med.expiry_date) return false;
                const expDate = new Date(med.expiry_date);
                expDate.setHours(0,0,0,0);
                const diffTime = expDate - today;
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                return diffDays >= 0 && diffDays <= expiryThresholdDays;
            });
            const low = allMedicines.filter(med => {
                const threshold = med.min_threshold !== null && med.min_threshold !== undefined 
                                  ? med.min_threshold 
                                  : lowQuantityDefaultThreshold;
                return med.quantity <= threshold;
            });
            setExpiringSoon(expiring.sort((a,b) => new Date(a.expiry_date) - new Date(b.expiry_date)));
            setLowStock(low.sort((a,b) => a.quantity - b.quantity));
    }, [allMedicines, expiryThresholdDays, lowQuantityDefaultThreshold]);

    const handleCopyToClipboard = () => {
        if (pharmacyId) {
            navigator.clipboard.writeText(pharmacyId)
                .then(() => alert('ID –ê–ø—Ç–µ—á–∫–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!'))
                .catch(err => console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ID: ', err));
        }
    };

    const handleJoin = () => {
        if (inputPharmacyIdToJoin.trim()) {
            joinPharmacy(inputPharmacyIdToJoin.trim());
            setInputPharmacyIdToJoin('');
        } else {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∞–ø—Ç–µ—á–∫–∏ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.");
        }
    };
    
    const handleCreateNew = () => {
        if (window.confirm("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∞–ø—Ç–µ—á–∫—É? –¢–µ–∫—É—â–∏–π ID –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω, –∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–Ω–æ–≤–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (–µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Ç–µ–∫—É—â–∏–π ID).")) {
            createNewPharmacy();
        }
    };

    const handleClearCurrentPharmacy = () => {
        if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–π –∞–ø—Ç–µ—á–∫–∏? –î–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –Ω–æ –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –∫ –Ω–∏–º –¥–æ—Å—Ç—É–ø, –µ—Å–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ ID.")) {
            clearPharmacyId();
        }
    }

    return (
        <div className="app-settings-container">
            <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–ø—Ç–µ—á–∫–æ–π</h2>

            <div className="settings-section pharmacy-management">
                <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–ø—Ç–µ—á–∫–æ–π</h3>
                {pharmacyId ? (
                    <>
                        <p><strong>–¢–µ–∫—É—â–∏–π ID –≤–∞—à–µ–π –∞–ø—Ç–µ—á–∫–∏:</strong></p>
                        <div className="pharmacy-id-display">
                            <code>{pharmacyId}</code>
                            <button onClick={handleCopyToClipboard} title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID">üìã</button>
                        </div>
                        <p className="small-text">–ü–µ—Ä–µ–¥–∞–π—Ç–µ —ç—Ç–æ—Ç ID –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ) –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.</p>
                        <button onClick={handleClearCurrentPharmacy} className="danger-btn" style={{marginTop: '10px', marginRight: '10px'}}>
                            –û—Ç—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –æ—Ç —ç—Ç–æ–π –∞–ø—Ç–µ—á–∫–∏
                        </button>
                    </>
                ) : (
                    <p>–ê–ø—Ç–µ—á–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ.</p>
                )}
                 <button onClick={handleCreateNew} style={{marginTop: '10px'}}>
                    –°–æ–∑–¥–∞—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–æ–≤—É—é –∞–ø—Ç–µ—á–∫—É
                </button>

                <h4>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –¥—Ä—É–≥–æ–π –∞–ø—Ç–µ—á–∫–µ:</h4>
                <div className="join-input-group">
                    <input
                        type="text"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ ID –¥—Ä—É–≥–æ–π –∞–ø—Ç–µ—á–∫–∏"
                        value={inputPharmacyIdToJoin}
                        onChange={(e) => setInputPharmacyIdToJoin(e.target.value)}
                    />
                    <button onClick={handleJoin}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</button>
                </div>
            </div>


            <div className="settings-section">
                <h3>–ü–æ—Ä–æ–≥–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
                 <div className="setting-item">
                    <label htmlFor="expiryThreshold">–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å –æ —Å—Ä–æ–∫–µ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∑–∞ (–¥–Ω–µ–π):</label>
                    <select id="expiryThreshold" value={expiryThresholdDays} onChange={(e) => setExpiryThresholdDays(parseInt(e.target.value, 10))}>
                        <option value="7">7 –¥–Ω–µ–π</option><option value="14">14 –¥–Ω–µ–π</option><option value="30">30 –¥–Ω–µ–π</option><option value="60">60 –¥–Ω–µ–π</option>
                    </select>
                </div>
                <div className="setting-item">
                    <label htmlFor="lowQuantityThreshold">–ú–∏–Ω. –ø–æ—Ä–æ–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω):</label>
                    <input type="number" id="lowQuantityThreshold" value={lowQuantityDefaultThreshold} onChange={(e) => setLowQuantityDefaultThreshold(parseInt(e.target.value, 10) || 0)} min="0"/>
                </div>
            </div>

            <div className="notifications-section settings-section">
                <h3>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <h4>–ò—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ (–±–ª–∏–∂–∞–π—à–∏–µ {expiryThresholdDays} –¥–Ω–µ–π):</h4>
                {expiringSoon.length > 0 ? ( <ul> {expiringSoon.map(med => (<li key={`exp-${med.id}`}>{med.name} - –∏—Å—Ç–µ–∫–∞–µ—Ç {new Date(med.expiry_date).toLocaleDateString()}</li>))} </ul>) : (<p>–ù–µ—Ç –ª–µ–∫–∞—Ä—Å—Ç–≤ —Å –∏—Å—Ç–µ–∫–∞—é—â–∏–º —Å—Ä–æ–∫–æ–º –≥–æ–¥–Ω–æ—Å—Ç–∏.</p>)}
                <h4>–ó–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è (—Ä–∞–≤–Ω–æ –∏–ª–∏ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞):</h4>
                {lowStock.length > 0 ? (<ul> {lowStock.map(med => (<li key={`low-${med.id}`}>{med.name} - –æ—Å—Ç–∞–ª–æ—Å—å {med.quantity} {med.unit} (–ø–æ—Ä–æ–≥: {med.min_threshold !== null ? med.min_threshold : lowQuantityDefaultThreshold})</li>))} </ul>) : (<p>–ù–µ—Ç –ª–µ–∫–∞—Ä—Å—Ç–≤ —Å –Ω–∏–∑–∫–∏–º –æ—Å—Ç–∞—Ç–∫–æ–º.</p>)}
            </div>

            <div className="about-section settings-section">
                 <h3>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h3>
                 <p>–¶–∏—Ñ—Ä–æ–≤–∞—è –ê–ø—Ç–µ—á–∫–∞ v1.0.0</p>
                 <p>–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö –¥–∏–ø–ª–æ–º–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.</p>
            </div>
        </div>
    );
}

export default AppSettings;